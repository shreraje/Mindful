[{"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\index.js":"1","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\App.js":"2","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\Video.jsx":"3","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\Workout.jsx":"4","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\welcome\\Welcomepage.js":"5","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\Homepage.jsx":"6","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Navbars\\Navbar.jsx":"7","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\BreathingExercise.jsx":"8","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\TimerForm\\TimerForm.jsx":"9","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Timer\\Timer.jsx":"10","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Buttons\\Buttons.jsx":"11","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\DotContainer\\DotContainer.jsx":"12","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Dots\\Dots.jsx":"13","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\BreathingIntro\\BreathingIntro.jsx":"14"},{"size":182,"mtime":1609186310146,"results":"15","hashOfConfig":"16"},{"size":961,"mtime":1609896633579,"results":"17","hashOfConfig":"16"},{"size":193,"mtime":1609538199364,"results":"18","hashOfConfig":"16"},{"size":197,"mtime":1609538199366,"results":"19","hashOfConfig":"16"},{"size":1864,"mtime":1609896633607,"results":"20","hashOfConfig":"16"},{"size":2562,"mtime":1609896633602,"results":"21","hashOfConfig":"16"},{"size":773,"mtime":1609735995346,"results":"22","hashOfConfig":"16"},{"size":301,"mtime":1609897017371,"results":"23","hashOfConfig":"16"},{"size":3973,"mtime":1609906568163,"results":"24","hashOfConfig":"16"},{"size":443,"mtime":1609905740403,"results":"25","hashOfConfig":"16"},{"size":380,"mtime":1609905751431,"results":"26","hashOfConfig":"16"},{"size":365,"mtime":1609905742096,"results":"27","hashOfConfig":"16"},{"size":279,"mtime":1609906549410,"results":"28","hashOfConfig":"16"},{"size":1531,"mtime":1609902061292,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1i0f5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\index.js",[],["60","61"],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\App.js",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\Video.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\Workout.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\welcome\\Welcomepage.js",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\Homepage.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Navbars\\Navbar.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\pages\\BreathingExercise.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\TimerForm\\TimerForm.jsx",["62","63"],"import React, { useState } from 'react';\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport BreathingIntro from '../BreathingIntro/BreathingIntro';\nimport Timer from '../Timer/Timer';\nimport DotContainer from '../DotContainer/DotContainer';\nimport './TimerForm.css';\n\nconst TimerForm = () => {\n    // const [time, setTime] = useState('');\n\n    // //Handle change to form\n    // const handleInputChange = event => {\n    //     setTime(event.target.value);\n    // };\n\n    // //Set the time that the user selected\n    // const submitTime = event => {\n    //     event.preventDefault();\n    //     console.log(event.target.value);\n    //     setTime(event.target.value);\n    // };\n\n    //Handle dot animations when timer is started \n    const beginAnimation = () => {\n        const animatedDot = document.getElementById('moving');\n        console.log(animatedDot);\n        animatedDot.classList.add('expand');\n        const expanded = document.querySelector('.expand');\n        expanded.onanimationend = () => {\n            animatedDot.classList.remove('expand');\n            animatedDot.classList.add('contract');\n            const contracted = document.querySelector('.contract');\n            contracted.onanimationend = () => {\n                animatedDot.classList.remove('contract');\n                animatedDot.classList.add('expand');\n                beginAnimation();\n            };\n        };\n    };\n\n    //Begin timer and animation event\n    const startTimer = () => {\n        let timesUp = false;\n        let totalMin = 5;\n        let totalSec = totalMin * 60;\n        let secondsLeft;\n        let secondsElapsed = 0;\n\n        const interval = setInterval(() => {\n            secondsElapsed++;\n            secondsLeft = totalSec - secondsElapsed;\n            let remainingMin = Math.floor(secondsLeft / 60);\n            let remainderSeconds = secondsLeft % 60;\n\n            document.getElementById('minutes-display').textContent = `${remainingMin}:`\n            if(remainderSeconds < 10) {\n                document.getElementById('seconds-display').textContent = \"0\" + remainderSeconds;\n            } else {\n                document.getElementById('seconds-display').textContent = remainderSeconds;\n            }\n\n            if(secondsLeft <= 0) {\n                timesUp = true;\n                clearInterval(interval);\n            };\n\n            while(timesUp !== true) {\n                beginAnimation();\n            };\n        }, 1000);\n\n        \n    };\n\n    return(\n        <Container>\n            <BreathingIntro/>\n            {/* <Row>\n                <Col sm={6} md={6} lg={6} xl={6}>\n                    <Form id=\"form-container\">\n                        <Form.Group>\n                            <Form.Label id=\"form-header\">Box breathing practice!</Form.Label>\n                            <Form.Control \n                                id=\"form-control\"\n                                type=\"text\" \n                                placeholder=\"Enter a time limit\"\n                                name=\"minutes\"\n                                value={time}\n                                onChange={handleInputChange}\n                            />\n                            <Form.Text id=\"form-text\">\n                                It is recommended you perform this exericse for a minimum 2 minutes\n                            </Form.Text>\n                        </Form.Group>\n                    </Form>\n                    <TimerFormBtn\n                        set={submitTime}\n                    />\n                </Col>\n            </Row> */}\n\n            <Row>\n                <Col sm={4} md={4} lg={4} xl={4}>\n                    <Timer\n                        start={startTimer}\n                        // minutes={time}\n                        // animate={beginAnimation}\n                    />\n                </Col>\n            </Row>\n            <DotContainer/>\n        </Container>\n    );\n};\n\nexport default TimerForm;","C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Timer\\Timer.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Buttons\\Buttons.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\DotContainer\\DotContainer.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\Dots\\Dots.jsx",[],"C:\\Users\\owner\\Code\\Projects\\Mindful\\mindful\\src\\components\\BreathingIntro\\BreathingIntro.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":17,"nodeType":"70","messageId":"71","endLine":1,"endColumn":25},{"ruleId":"68","severity":1,"message":"72","line":2,"column":31,"nodeType":"70","messageId":"71","endLine":2,"endColumn":35},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]